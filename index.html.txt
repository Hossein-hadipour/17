<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>داستان‌گوی دیجیتال | حسین هادی پور</title>
  <!-- PWA -->
  <link rel="manifest" href="manifest.json">
  <link rel="icon" href="icon-192.png" type="image/png">
  <link rel="apple-touch-icon" href="icon-192.png">
  <meta name="theme-color" content="#fd79a8">

  <!-- SweetAlert2 + QR Code + html2canvas -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.1/build/qrcode.min.js"></script>
  <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>

  <style>
    :root {
      --primary: #fd79a8;
      --secondary: #fdcb6e;
      --bg: #f8f9fa;
      --card: white;
      --text: #2d3436;
      --border: #dfe6e9;
      --shadow: rgba(0,0,0,0.12);
    }
    [data-theme="dark"] {
      --primary: #ff6b9d;
      --secondary: #feca57;
      --bg: #2d3436;
      --card: #353b48;
      --text: #dfe4ea;
      --border: #57606f;
      --shadow: rgba(0,0,0,0.3);
    }

    * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Tahoma', sans-serif; }
    body {
      background: linear-gradient(135deg, #74b9ff, #0984e3);
      color: var(--text);
      min-height: 100vh;
      padding: 15px;
      overflow-x: hidden;
      position: relative;
      transition: all 0.5s ease;
    }

    .particles {
      position: fixed;
      top: 0; left: 0; width: 100%; height: 100%;
      pointer-events: none; z-index: -1;
    }
    .particle {
      position: absolute;
      font-size: 1.5em;
      opacity: 0;
      animation: float 6s infinite ease-in-out;
    }
    @keyframes float {
      0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0; }
      50% { opacity: 0.8; }
      100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }
    }

    .container {
      max-width: 900px;
      margin: 20px auto;
      background: rgba(255,255,255,0.95);
      border-radius: 30px;
      box-shadow: 0 25px 60px var(--shadow);
      overflow: hidden;
      animation: popIn 1s ease-out;
      backdrop-filter: blur(12px);
    }
    @keyframes popIn {
      0% { opacity: 0; transform: scale(0.85); }
      100% { opacity: 1; transform: scale(1); }
    }

    header {
      background: linear-gradient(45deg, var(--primary), var(--secondary));
      color: white;
      text-align: center;
      padding: 40px 20px;
      position: relative;
    }
    h1 { font-size: 2.6em; margin-bottom: 12px; text-shadow: 0 3px 10px rgba(0,0,0,0.3); }
    p.subtitle { font-size: 1.25em; opacity: 0.9; }

    .theme-toggle {
      position: absolute;
      top: 15px; left: 15px;
      background: rgba(255,255,255,0.2);
      border: none;
      width: 50px; height: 50px;
      border-radius: 50%;
      font-size: 1.4em;
      cursor: pointer;
      transition: 0.4s;
    }
    .theme-toggle:hover { transform: rotate(360deg); }

    .install-btn {
      position: fixed;
      bottom: 20px;
      left: 20px;
      background: #00b894;
      color: white;
      border: none;
      padding: 15px 25px;
      border-radius: 50px;
      font-size: 1.1em;
      cursor: pointer;
      box-shadow: 0 8px 20px rgba(0,184,148,0.4);
      z-index: 1000;
      display: none;
    }
    .install-btn:hover { background: #00a085; transform: translateY(-3px); }

    .story-maker { padding: 40px; background: var(--bg); }
    .input-group { margin-bottom: 26px; }
    label { display: block; margin-bottom: 10px; font-weight: bold; color: var(--text); font-size: 1.1em; }
    input, textarea {
      width: 100%; padding: 16px; border: 3px solid var(--border); border-radius: 16px;
      font-size: 1.05em; background: var(--card); color: var(--text);
    }
    input:focus, textarea:focus {
      border-color: var(--primary); outline: none;
      box-shadow: 0 0 0 5px rgba(253, 121, 168, 0.3);
    }
    textarea { height: 130px; resize: vertical; }

    .upload-label {
      display: inline-block; background: var(--secondary); color: #2d3436;
      padding: 12px 26px; border-radius: 50px; cursor: pointer; font-size: 0.95em;
      margin-top: 10px; transition: 0.3s;
    }
    .upload-label:hover { background: #e17055; color: white; }
    input[type="file"] { display: none; }

    .media-preview {
      margin: 15px 0; padding: 15px; background: var(--card);
      border-radius: 12px; border: 2px dashed var(--border); text-align: center;
    }
    .media-preview audio, .media-preview video {
      width: 100%; max-height: 200px; border-radius: 12px; margin-top: 10px;
    }

    .template-select { margin-bottom: 28px; text-align: center; }
    .template-btn {
      background: var(--card); color: var(--text); border: 2px solid var(--border);
      padding: 12px 22px; margin: 6px; border-radius: 50px; cursor: pointer;
      font-size: 0.95em; transition: 0.4s; opacity: 0; transform: translateY(20px);
    }
    .template-btn.visible {
      opacity: 1; transform: translateY(0);
      animation: fadeUp 0.5s ease-out forwards;
    }
    @keyframes fadeUp { to { opacity: 1; transform: translateY(0); } }
    .template-btn:hover, .template-btn.active {
      background: var(--primary); color: white;
    }

    .btn {
      background: var(--primary); color: white; border: none;
      padding: 16px 34px; font-size: 1.15em; border-radius: 50px;
      cursor: pointer; margin: 10px 6px; box-shadow: 0 6px 18px rgba(253,121,168,0.4);
      opacity: 0; transform: translateY(20px); position: relative; overflow: hidden;
    }
    .btn.visible {
      opacity: 1; transform: translateY(0);
      animation: fadeUp 0.5s ease-out forwards;
    }
    .btn:hover { background: #e84393; transform: translateY(-4px); }

    .word-count { text-align: center; margin: 18px 0; color: var(--text); font-size: 1em; opacity: 0.8; }

    .preview {
      margin: 40px; padding: 40px; background: var(--card);
      border-radius: 22px; border: 4px dashed var(--primary);
      min-height: 280px; opacity: 0; transition: all 0.6s ease;
    }
    .preview.active {
      opacity: 1; animation: zoomIn 0.7s ease-out;
    }
    @keyframes zoomIn {
      0% { opacity: 0; transform: scale(0.9); }
      100% { opacity: 1; transform: scale(1); }
    }

    .story-img, .story-video {
      width: 100%; max-height: 320px; object-fit: cover;
      border-radius: 18px; margin: 22px 0; box-shadow: 0 12px 30px var(--shadow);
    }
    .story-video { cursor: pointer; }
    .story-title {
      font-size: 2.3em; margin: 20px 0; font-weight: bold;
      background: linear-gradient(45deg, var(--primary), var(--secondary));
      -webkit-background-clip: text; -webkit-text-fill-color: transparent;
    }
    .story-text { line-height: 2.1; color: var(--text); font-size: 1.2em; white-space: pre-wrap; }

    .action-buttons { text-align: center; margin-top: 30px; display: flex; flex-wrap: wrap; justify-content: center; }

    .fullscreen-btn {
      position: absolute; top: 15px; right: 15px; background: rgba(0,0,0,0.5);
      color: white; border: none; padding: 10px; border-radius: 50%; font-size: 1.2em;
      cursor: pointer; display: none;
    }
    .preview.active .fullscreen-btn { display: block; }

    footer {
      text-align: center; padding: 28px; background: #2d3436;
      color: var(--primary); font-size: 1.15em; font-weight: bold;
    }
    footer span { color: var(--secondary); }
  </style>
</head>
<body>

  <div class="particles" id="particles"></div>
  <button class="install-btn" id="installBtn">نصب اپ</button>

  <div class="container">
    <button class="theme-toggle" onclick="toggleTheme()">حالت تاریک</button>
    
    <header>
      <h1>داستان‌گوی دیجیتال</h1>
      <p class="subtitle">بنویس، صدا و فیلم بذار، ذخیره کن، به اشتراک بذار!</p>
    </header>

    <div class="story-maker">
      <!-- همان فرم قبلی -->
      <div class="template-select" id="templates">
        <p><strong>موضوع انتخاب کن:</strong></p>
        <button class="template-btn" onclick="setTemplate('سفر به جنگل جادویی')">جنگل جادویی</button>
        <button class="template-btn" onclick="setTemplate('اختراع ربات مهربان')">ربات مهربان</button>
        <button class="template-btn" onclick="setTemplate('یک روز در مریخ')">مریخ‌نشین</button>
        <button class="template-btn" onclick="setTemplate('')">آزاد</button>
      </div>

      <div class="input-group">
        <label for="title">عنوان داستان:</label>
        <input type="text" id="title" placeholder="مثلاً: ماجرای اژدها..." oninput="updatePreview()" />
      </div>

      <div class="input-group">
        <label>تصویر داستان:</label>
        <input type="text" id="imageUrl" placeholder="لینک تصویر (اختیاری)" oninput="updatePreview()" />
        <label class="upload-label">
          <input type="file" id="imageUpload" accept="image/*" onchange="handleImageUpload(event)" />
          آپلود تصویر
        </label>
      </div>

      <div class="input-group">
        <label>صداگذاری داستان (MP3):</label>
        <label class="upload-label">
          <input type="file" id="audioUpload" accept="audio/mp3" onchange="handleAudioUpload(event)" />
          آپلود صدا
        </label>
        <div class="media-preview" id="audioPreview"></div>
      </div>

      <div class="input-group">
        <label>ویدیو داستان (MP4):</label>
        <label class="upload-label">
          <input type="file" id="videoUpload" accept="video/mp4" onchange="handleVideoUpload(event)" />
          آپلود ویدیو
        </label>
        <div class="media-preview" id="videoPreview"></div>
      </div>

      <div class="input-group">
        <label for="story">متن داستان:</label>
        <textarea id="story" placeholder="داستانتو با ایموجی بنویس..." oninput="updatePreview()"></textarea>
      </div>

      <div class="word-count" id="wordCount">۰ کلمه</div>

      <div class="action-buttons" id="actions">
        <button class="btn" onclick="showFinal()">نمایش نهایی</button>
        <button class="btn" onclick="randomColor()">رنگ تصادفی</button>
        <button class="btn" onclick="typeEffect()">افکت تایپ</button>
        <button class="btn" onclick="saveAsImage()">ذخیره عکس</button>
        <button class="btn" onclick="saveFullStory()">ذخیره کامل</button>
        <button class="btn" onclick="loadFullStory()">بازخوانی</button>
        <button class="btn" onclick="shareStory()">اشتراک‌گذاری</button>
        <button class="btn" onclick="printStory()">چاپ</button>
        <button class="btn" onclick="copyText()">کپی متن</button>
        <button class="btn" onclick="resetAll()">شروع دوباره</button>
      </div>
    </div>

    <div id="preview" class="preview">
      <button class="fullscreen-btn" onclick="toggleFullscreen()">تمام‌صفحه</button>
      <h2 class="story-title" id="previewTitle">عنوان ظاهر می‌شه...</h2>
      <img id="previewImg" class="story-img" src="" alt="تصویر" style="display:none;" />
      <video id="previewVideo" class="story-video" controls style="display:none;" onclick="this.requestFullscreen()"></video>
      <audio id="previewAudio" controls style="display:none; width:100%; margin:15px 0;"></audio>
      <p class="story-text" id="previewText">متن داستان اینجا نمایش داده می‌شه...</p>
    </div>
  </div>

  <footer>
    سازنده <span>حسین هادی پور</span>
  </footer>

  <script>
    // PWA نصب
    let deferredPrompt;
    const installBtn = document.getElementById('installBtn');
    window.addEventListener('beforeinstallprompt', (e) => {
      e.preventDefault();
      deferredPrompt = e;
      installBtn.style.display = 'block';
    });
    installBtn.addEventListener('click', () => {
      installBtn.style.display = 'none';
      deferredPrompt.prompt();
      deferredPrompt.userChoice.then(() => {
        deferredPrompt = null;
      });
    });

    // Service Worker
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('sw.js');
      });
    }

    // بقیه کدهای قبلی (همانند نسخه قبلی)
    const Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, timer: 3000, timerProgressBar: true });
    // ... تمام توابع قبلی (toggleTheme, updatePreview, handleImageUpload, و غیره)
    // (برای اختصار، کد کامل در نسخه قبلی بود — فقط اینجا PWA اضافه شد)
  </script>
</body>
</html>
